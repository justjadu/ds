11.Write a C program to generate the Fibonacci series using stack


#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#define MAX_SIZE 100
// Structure to represent a stack
struct Stack {
int items[MAX_SIZE];
int top;
};
// Function to initialize an empty stack
void initialize(struct Stack* stack) {
stack->top = -1;
}
// Function to check if the stack is empty
int isEmpty(struct Stack* stack) {
return stack->top == -1;
}
// Function to push an item onto the stack
void push(struct Stack* stack, int item) {
if (stack->top == MAX_SIZE - 1) {
printf("Stack Overflow\n");
getch();  // Wait for a key press before exiting
exit(1);
}
stack->items[++stack->top] = item;
}

// Function to pop an item from the stack
int pop(struct Stack* stack) {
if (isEmpty(stack)) {
printf("Stack Underflow\n");
getch();  // Wait for a key press before exiting
exit(1);
}
return stack->items[stack->top--];
}  // Function to generate Fibonacci series using a stack
void generateFibonacci(int n) {
struct Stack fibStack;
initialize(&fibStack);
printf("Fibonacci Series: ");
int a = 0, b = 1;
int i;
for (i = 0; i < n; ++i) {
push(&fibStack, a);
int next = a + b;
a = b;
b = next;
}
while (!isEmpty(&fibStack)) {
printf("%d ", pop(&fibStack));
}
printf("\n");
}
int main() {
int n;  // Input from the user
clrscr();  // Clear screen
printf("Enter the number of terms in the Fibonacci series: ");
scanf("%d", &n);   // Generate and display the Fibonacci series
generateFibonacci(n);  // Wait for a key press before exiting
getch();  // Wait for a key press
clrscr();  // Clear screen
return 0;
}


14 .Write a C program to implement Josephus problem using linked list



#include <stdio.h>
#include <stdlib.h>
struct Node {
int data;
struct Node* next;
};
struct Node* createNode(int data) {
struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
newNode->data = data;
newNode->next = NULL;
return newNode;
}
struct Node* buildCircularLinkedList(int n) {
if (n <= 0) {
return NULL;
}
struct Node* head = createNode(1);
struct Node* current = head;
for (int i = 2; i <= n; i++) {
current->next = createNode(i);
current = current->next;
}
current->next = head; // Make it circular
return head;
}
void printList(struct Node* head) {
if (!head) {
return;
}
struct Node* current = head;
do {
printf("%d ", current->data);
current = current->next;
} while (current != head);
printf("\n");
}
int josephus(struct Node** head, int k) {
if (!(*head)) {
return -1;
}
struct Node* current = *head;
struct Node* prev = NULL;
while (current->next != current) {
// Find the k-th node
for (int i = 1; i < k; i++) {
prev = current;
current = current->next;
}
// Remove the k-th node
if (prev != NULL) {
prev->next = current->next;
} else {
// If prev is NULL, it means we are removing the head node
*head = current->next;
}
struct Node* temp = current;
current = current->next;
free(temp);
}
int survivor = current->data;
free(current);
*head = NULL;
return survivor;
}
int main() {
int n, k;
printf("Enter the number of people (n): ");
scanf("%d", &n);
printf("Enter the counting interval (k): ");
scanf("%d", &k);
struct Node* head = buildCircularLinkedList(n);
printf("Initial List: ");
printList(head);
int survivor = josephus(&head, k);
printf("The survivor is at position %d.\n", survivor);
return 0;
}


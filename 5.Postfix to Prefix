5./*POSTFIX TO PREFIX EXPRESSION USING STACK*/


#include <stdio.h>
#include <conio.h>
#include <string.h>

char stack[50][50];
int top = -1;

void clear_stack() {
top = -1;
}

void push(char *s) {
strcpy(stack[++top], s);
}

char *pop() {
return stack[top--];
}

int is_operator(char x) {
if (x == '+' || x == '-' || x == '*' || x == '/') {
return 1;
} else {
return 0;
}
}

// Function to Convert postfix to Prefix
void convert(char *exp) {
int i, l;
char op1[50], op2[50];
clear_stack();
l = strlen(exp);

// Scanning from left to right
for (i = 0; i < l; i++) {
// Checking if the symbol is an operator
if (is_operator(exp[i])) {
// Popping two operands from stack
strcpy(op2, pop());
strcpy(op1, pop());
// Concatenating the operator and operands
sprintf(stack[++top], "%c%s%s", exp[i], op1, op2);
} else {
// If it is an operand, push the operand to the stack
sprintf(stack[++top], "%c", exp[i]);
}
}
// Print the prefix expression
printf("%s\n", stack[top]);
}

// Main function
void main() {
clrscr();

// Accept expression from the user
char expression[50];
printf("Enter the postfix expression: ");
scanf("%s", expression);

// Convert and print the prefix expression
convert(expression);

getch();
}

